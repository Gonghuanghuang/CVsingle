// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rXnSEQkb737qyHw1C9ru8K
// Component: 6PrkKCzRawZB

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Uploadvideo3 from "../../Uploadvideo3"; // plasmic-import: -Eu6Snr_YzCF/component
import { Video } from "@plasmicpkgs/plasmic-basic-components";
import Checksecurity from "../../Checksecurity"; // plasmic-import: mRk8_altAQpa/component
import Upload from "../../Upload"; // plasmic-import: QcDiULpEwHWQ/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: rXnSEQkb737qyHw1C9ru8K/projectcss
import sty from "./PlasmicCvsingle.module.css"; // plasmic-import: 6PrkKCzRawZB/css

createPlasmicElementProxy;

export type PlasmicCvsingle__VariantMembers = {};
export type PlasmicCvsingle__VariantsArgs = {};
type VariantPropType = keyof PlasmicCvsingle__VariantsArgs;
export const PlasmicCvsingle__VariantProps = new Array<VariantPropType>();

export type PlasmicCvsingle__ArgsType = {
  children?: React.ReactNode;
  slot?: React.ReactNode;
  children2?: React.ReactNode;
  slot2?: React.ReactNode;
  children3?: React.ReactNode;
  slot3?: React.ReactNode;
  children4?: React.ReactNode;
  slot4?: React.ReactNode;
  children5?: React.ReactNode;
  slot5?: React.ReactNode;
  children6?: React.ReactNode;
  slot6?: React.ReactNode;
  children7?: React.ReactNode;
  slot7?: React.ReactNode;
  children8?: React.ReactNode;
  slot8?: React.ReactNode;
  children9?: React.ReactNode;
  slot9?: React.ReactNode;
};
type ArgPropType = keyof PlasmicCvsingle__ArgsType;
export const PlasmicCvsingle__ArgProps = new Array<ArgPropType>(
  "children",
  "slot",
  "children2",
  "slot2",
  "children3",
  "slot3",
  "children4",
  "slot4",
  "children5",
  "slot5",
  "children6",
  "slot6",
  "children7",
  "slot7",
  "children8",
  "slot8",
  "children9",
  "slot9"
);

export type PlasmicCvsingle__OverridesType = {
  root?: Flex__<"div">;
  freeBox?: Flex__<"div">;
  upload?: Flex__<typeof Upload>;
};

export interface DefaultCvsingleProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicCvsingle__RenderFunc(props: {
  variants: PlasmicCvsingle__VariantsArgs;
  args: PlasmicCvsingle__ArgsType;
  overrides: PlasmicCvsingle__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__o2Lw
              )}
            >
              {
                "\u8bf7\u6839\u636e\u6f14\u793a\u89c6\u9891\u63d0\u793a\uff0c\u62cd\u6444\u52a8\u4f5c\u5e76\u4e0a\u4f20\u3002"
              }
            </div>
            <Uploadvideo3
              className={classNames("__wab_instance", sty.uploadvideo3__kiiXe)}
              slot={renderPlasmicSlot({
                defaultContents: (
                  <Video
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__sHPtt
                    )}
                    controls={true}
                    playsInline={false}
                    src={
                      "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                    }
                  />
                ),

                value: args.slot
              })}
            >
              {renderPlasmicSlot({
                defaultContents: "1.\u5750\u59ff",
                value: args.children
              })}
            </Uploadvideo3>
            <Uploadvideo3
              className={classNames("__wab_instance", sty.uploadvideo3__xbpTi)}
              slot={renderPlasmicSlot({
                defaultContents: (
                  <Video
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__zdqw
                    )}
                    controls={true}
                    src={
                      "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                    }
                  />
                ),

                value: args.slot2
              })}
            >
              {renderPlasmicSlot({
                defaultContents: "2.\u81ea\u7136\u8d77\u5750",
                value: args.children2
              })}
            </Uploadvideo3>
            <Checksecurity
              className={classNames("__wab_instance", sty.checksecurity__uvQCl)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ypal8
                )}
              >
                {"\u7528\u8098\u5173\u8282\u652f\u6491"}
              </div>
            </Checksecurity>
            <Uploadvideo3
              className={classNames("__wab_instance", sty.uploadvideo3__sZsZn)}
              slot={renderPlasmicSlot({
                defaultContents: (
                  <Video
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__tf5Gd
                    )}
                    controls={true}
                    src={
                      "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                    }
                  />
                ),

                value: args.slot3
              })}
            >
              {renderPlasmicSlot({
                defaultContents: "3.\u8bd5\u56fe\u8d77\u8eab",
                value: args.children3
              })}
            </Uploadvideo3>
            <Uploadvideo3
              className={classNames("__wab_instance", sty.uploadvideo3__nwF8E)}
              slot={renderPlasmicSlot({
                defaultContents: (
                  <Video
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__ytMGz
                    )}
                    controls={true}
                    src={
                      "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                    }
                  />
                ),

                value: args.slot4
              })}
            >
              {renderPlasmicSlot({
                defaultContents:
                  "4.\u7acb\u5373\u7ad9\u8d77\u6765\u65f6\u5e73\u8861\u529f\u80fd",
                value: args.children4
              })}
            </Uploadvideo3>
            <Checksecurity
              className={classNames("__wab_instance", sty.checksecurity__fx5MW)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___98Jyo
                )}
              >
                {"\u9700\u8981\u4f7f\u7528\u652f\u5177\u6216\u8005\u624b\u6756"}
              </div>
            </Checksecurity>
            <Uploadvideo3
              className={classNames("__wab_instance", sty.uploadvideo3__kG0Y)}
              slot={renderPlasmicSlot({
                defaultContents: (
                  <Video
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__ha0Wd
                    )}
                    controls={true}
                    src={
                      "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                    }
                  />
                ),

                value: args.slot5
              })}
            >
              {renderPlasmicSlot({
                defaultContents: "5.\u81ea\u7136\u7ad9\u59ff",
                value: args.children5
              })}
            </Uploadvideo3>
            <Uploadvideo3
              className={classNames("__wab_instance", sty.uploadvideo3__h7Q2)}
              slot={renderPlasmicSlot({
                defaultContents: (
                  <Video
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__eaGdI
                    )}
                    controls={true}
                    src={
                      "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                    }
                  />
                ),

                value: args.slot6
              })}
            >
              {renderPlasmicSlot({
                defaultContents: "6.\u7ad9\u7acb\u8f7b\u63a8",
                value: args.children6
              })}
            </Uploadvideo3>
            <Uploadvideo3
              className={classNames("__wab_instance", sty.uploadvideo3__wnfKp)}
              slot={renderPlasmicSlot({
                defaultContents: (
                  <Video
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__djbNu
                    )}
                    controls={true}
                    src={
                      "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                    }
                  />
                ),

                value: args.slot7
              })}
            >
              {renderPlasmicSlot({
                defaultContents: "7.\u95ed\u76ee\u7ad9\u7acb\u5e73\u8861",
                value: args.children7
              })}
            </Uploadvideo3>
            <Uploadvideo3
              className={classNames("__wab_instance", sty.uploadvideo3___1K9Uf)}
              slot={renderPlasmicSlot({
                defaultContents: (
                  <Video
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__vRgAl
                    )}
                    controls={true}
                    src={
                      "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                    }
                  />
                ),

                value: args.slot8
              })}
            >
              {renderPlasmicSlot({
                defaultContents: "8.\u8f6c\u8eab360\u5ea6",
                value: args.children8
              })}
            </Uploadvideo3>
            <Uploadvideo3
              className={classNames("__wab_instance", sty.uploadvideo3__e0DTy)}
              slot={renderPlasmicSlot({
                defaultContents: (
                  <Video
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__xrjz4
                    )}
                    controls={true}
                    src={
                      "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                    }
                  />
                ),

                value: args.slot9
              })}
            >
              {renderPlasmicSlot({
                defaultContents: "9.\u5750\u4e0b",
                value: args.children9
              })}
            </Uploadvideo3>
            <Checksecurity
              className={classNames("__wab_instance", sty.checksecurity__hFwFd)}
            />

            <Upload
              data-plasmic-name={"upload"}
              data-plasmic-override={overrides.upload}
              className={classNames("__wab_instance", sty.upload)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "freeBox", "upload"],
  freeBox: ["freeBox", "upload"],
  upload: ["upload"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  freeBox: "div";
  upload: typeof Upload;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicCvsingle__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicCvsingle__VariantsArgs;
    args?: PlasmicCvsingle__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicCvsingle__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicCvsingle__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicCvsingle__ArgProps,
          internalVariantPropNames: PlasmicCvsingle__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCvsingle__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCvsingle";
  } else {
    func.displayName = `PlasmicCvsingle.${nodeName}`;
  }
  return func;
}

export const PlasmicCvsingle = Object.assign(
  // Top-level PlasmicCvsingle renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    upload: makeNodeComponent("upload"),

    // Metadata about props expected for PlasmicCvsingle
    internalVariantProps: PlasmicCvsingle__VariantProps,
    internalArgProps: PlasmicCvsingle__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicCvsingle;
/* prettier-ignore-end */
